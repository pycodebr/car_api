[project]
name = "car-api"
version = "0.1.0"
description = ""
authors = [{ name = "pycodebr", email = "pycodebr@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi[standard] (>=0.116.1,<0.117.0)",
    "aiosqlite (>=0.21.0,<0.22.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "alembic (>=1.16.4,<2.0.0)",
    "pwdlib[argon2] (>=0.2.1,<0.3.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "sqlalchemy[asyncio] (>=2.0.42,<3.0.0)",
    "mkdocs (>=1.6.1,<2.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.7"
taskipy = "^1.14.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^5.0"

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]

[tool.ruff]
line-length = 79
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".gitignore",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic",
    "migrations",
]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
ignore = ['PLR2004', 'PLR0917', 'PLR0913', 'PT022']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev car_api/app.py --host 0.0.0.0'
pre_test = 'task lint'
test = 'pytest -s -x --cov=car_api -vv'
post_test = 'coverage html'
docs = 'mkdocs serve -a 127.0.0.1:8001'
